---
- name: Instalar y Configurar HAProxy + Keepalived para Kubernetes API Load Balancing
  hosts: haproxy_keepalived
  become: true
  vars:
    haproxy_config_dir: "/etc/haproxy"
    keepalived_config_dir: "/etc/keepalived"
    haproxy_config_template: "../../templates/haproxy/haproxy.cfg.j2"
    keepalived_config_template: "../../templates/keepalived/keepalived.conf.j2"

  tasks:

    - name: Verificar si el API Server (VIP) responde en el puerto 6443
      wait_for:
        host: "{{ api_vip }}"
        port: 6443
        timeout: 3
      register: api_server_status
      ignore_errors: yes

    - name: Definir si se habilita 'check' en HAProxy
      set_fact:
        enable_api_check: "{{ api_server_status is not failed }}"

    - name: Instalar HAProxy y Keepalived
      package:
        name:
          - haproxy
          - keepalived
        state: present

    - name: Asegurar que el grupo haproxy existe
      group:
        name: haproxy
        state: present

    - name: Asegurar que el usuario haproxy existe
      user:
        name: haproxy
        group: haproxy
        shell: /sbin/nologin
        system: yes
        create_home: no

    - name: Asegurar que el directorio de configuración de HAProxy existe
      file:
        path: "{{ haproxy_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar configuración de HAProxy
      template:
        src: "{{ haproxy_config_template }}"
        dest: "{{ haproxy_config_dir }}/haproxy.cfg"
        owner: root
        group: root
        mode: "0644"
      notify: Reiniciar HAProxy

    - name: Asegurar que el directorio de configuración de Keepalived existe
      file:
        path: "{{ keepalived_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar configuración de Keepalived
      template:
        src: "{{ keepalived_config_template }}"
        dest: "{{ keepalived_config_dir }}/keepalived.conf"
        owner: root
        group: root
        mode: "0644"
      notify: Reiniciar Keepalived

    - name: Asegurar que /run/haproxy existe y tiene permisos correctos
      file:
        path: /run/haproxy
        state: directory
        owner: haproxy
        group: haproxy
        mode: '0755'

    - name: Eliminar socket anterior si existe
      file:
        path: /run/haproxy/admin.sock
        state: absent

    - name: Validar configuración de HAProxy
      command: haproxy -c -f /etc/haproxy/haproxy.cfg
      register: haproxy_check
      failed_when: haproxy_check.rc != 0
      changed_when: false

    - name: Habilitar y arrancar HAProxy y Keepalived
      systemd:
        name: "{{ item }}"
        enabled: true
        state: restarted
      loop:
        - haproxy
        - keepalived

  handlers:
    - name: Reiniciar HAProxy
      systemd:
        name: haproxy
        state: restarted

    - name: Reiniciar Keepalived
      systemd:
        name: keepalived
        state: restarted