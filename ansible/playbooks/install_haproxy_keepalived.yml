---
- name: Instalar y Configurar HAProxy + Keepalived para Kubernetes API Load Balancing
  hosts: haproxy_keepalived
  become: true
  vars:
    haproxy_config_dir: "/etc/haproxy"
    keepalived_config_dir: "/etc/keepalived"
    haproxy_config_template: "../../templates/haproxy/haproxy.cfg.j2"
    keepalived_config_template: "../../templates/keepalived/keepalived.conf.j2"
    haproxy_socket_dir: "/var/lib/haproxy"
    api_vip: "10.17.5.10"  # Asegúrate de tener esta variable configurada con la IP VIP

  tasks:
    - name: Instalar net-tools para usar netstat
      become: yes
      yum:
        name: net-tools
        state: present

    - name: Asegurar que el grupo haproxy existe
      group:
        name: haproxy
        state: present

    - name: Asegurar que el usuario haproxy existe
      user:
        name: haproxy
        group: haproxy
        shell: /sbin/nologin
        system: yes
        create_home: no
        state: present

    - name: Crear {{ haproxy_socket_dir }} si no existe y aplicar permisos
      file:
        path: "{{ haproxy_socket_dir }}"
        state: directory
        owner: haproxy
        group: haproxy
        mode: '0755'

    - name: Establecer contexto SELinux para {{ haproxy_socket_dir }}
      sefcontext:
        target: '{{ haproxy_socket_dir }}(/.*)?'
        setype: var_run_t
        state: present
      when: ansible_selinux.status == "enabled"
      ignore_errors: true

    - name: Restaurar contexto SELinux en {{ haproxy_socket_dir }}
      command: restorecon -Rv {{ haproxy_socket_dir }}
      when: ansible_selinux.status == "enabled"
      ignore_errors: true

    - name: Eliminar socket anterior si existe
      file:
        path: "{{ haproxy_socket_dir }}/admin.sock"
        state: absent

    - name: Verificar si el API Server (VIP) responde en el puerto 6443
      wait_for:
        host: "{{ api_vip }}"
        port: 6443
        timeout: 3
      register: api_server_status
      ignore_errors: yes

    - name: Definir si se habilita 'check' en HAProxy
      set_fact:
        enable_api_check: "{{ api_server_status is not failed }}"

    - name: Instalar HAProxy y Keepalived
      package:
        name:
          - haproxy
          - keepalived
        state: present

    - name: Obtener interfaz activa para Keepalived
      command: ip route get 8.8.8.8
      register: default_route

    - name: Definir interfaz para Keepalived
      set_fact:
        keepalived_interface: "{{ default_route.stdout.split('dev')[1].split()[0] }}"

    - name: Asegurar que el directorio de configuración de HAProxy existe
      file:
        path: "{{ haproxy_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar configuración de HAProxy
      template:
        src: "{{ haproxy_config_template }}"
        dest: "{{ haproxy_config_dir }}/haproxy.cfg"
        owner: root
        group: root
        mode: "0644"
      notify: Reiniciar HAProxy

    - name: Asegurar que el directorio de configuración de Keepalived existe
      file:
        path: "{{ keepalived_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar configuración de Keepalived
      template:
        src: "{{ keepalived_config_template }}"
        dest: "{{ keepalived_config_dir }}/keepalived.conf"
        owner: root
        group: root
        mode: "0644"
      notify: Reiniciar Keepalived

    - name: Validar configuración de HAProxy
      command: haproxy -c -f /etc/haproxy/haproxy.cfg
      register: haproxy_check
      changed_when: false
      failed_when: haproxy_check.rc != 0

    - name: Permitir a HAProxy usar cualquier puerto TCP con SELinux (si aplica)
      command: setsebool -P haproxy_connect_any 1
      when: ansible_selinux.status == "enabled"
      ignore_errors: true

    - name: Modificar configuración de red para agregar la IP virtual (VIP)
      block:
        - name: Asegurar que la IP virtual esté presente en el archivo de configuración de red
          lineinfile:
            path: /etc/systemd/network/10-static-en.network
            line: "Address={{ api_vip }}/32"
            insertafter: '^\[Network\]$'
            state: present

        - name: Recargar la configuración de red
          command: networkctl reload

    - name: Modificar archivo del servicio HAProxy para agregar Sleep=5
      lineinfile:
        path: /usr/lib/systemd/system/haproxy.service
        regexp: '^ExecStart='
        line: 'ExecStart=/usr/sbin/haproxy -Ws -f $CONFIG -f $CFGDIR -p $PIDFILE $OPTIONS'
        backrefs: yes
        insertbefore: '^ExecReload='

    - name: Recargar configuración de systemd
      command: systemctl daemon-reload

    - name: Reiniciar el servicio HAProxy y Keepalived
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
      loop:
        - keepalived
        - haproxy

  handlers:
    - name: Reiniciar HAProxy
      systemd:
        name: haproxy
        state: restarted

    - name: Reiniciar Keepalived
      systemd:
        name: keepalived
        state: restarted